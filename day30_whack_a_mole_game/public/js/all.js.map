{"version":3,"sources":["all.js"],"names":["lastMole","scoreBoard","document","querySelector","holes","querySelectorAll","score","min","max","timeUp","round","Math","random","randomTime","hole","floor","length","randomHole","peep","time","classList","add","setTimeout","remove","startGame","e","isTrusted","this","parentNode","textContent","moles","forEach","mole","addEventListener","bonk"],"mappings":"aAAA,IAGIA,SAHEC,WAAaC,SAASC,cAAc,UACpCC,MAAQF,SAASG,iBAAiB,SADlCJ,MAAUC,SAAGA,iBAAuB,SACpCE,QAAQF,EAIVI,MAAQ,EAFZ,SAAIN,WAAUO,EAAAC,GACd,OAAIC,KAASC,MAAOC,KAAAC,UAAAJ,EAAAD,GAAAA,GAIpB,SAASM,WAAWN,GAElB,IAGFO,EAAAV,EAHcM,KAALK,MAAgBH,KAAAA,SAAeR,EAApBY,SAUlB,OAAIF,IAASd,SACJiB,WAAWb,GAJpBJ,SAAYW,EAKX,SAAAO,OASD,IAAMC,EAAON,WAAW,IAAK,KAP7Bb,EAAWc,WAAMV,OASjBU,EAAKM,UAAUC,IAAI,MAJrBC,WAAA,WAOIR,EAAKM,UAAUG,OAAO,MANjBL,QACDC,QACNA,GAGAG,SAAAA,YACER,WAAKM,YAAiB,EAWxBX,QAAS,EATPH,MAAKG,EAAUS,OAGhBI,WAND,WAAA,OAAAb,QAAA,GAAA,KAUF,SAASe,KAAAA,GAaHC,EAAEC,YAVNpB,QAcAqB,KAAKC,WAAWR,UAAUG,OAAO,MAbjCL,WAEAW,YAAAvB,OACWwB,MAAqBC,QAAhC,SAAAC,GAAA,OAAAA,EAAAC,iBAAA,QAAAC","file":"all.js","sourcesContent":["const scoreBoard = document.querySelector('.score'); // 計分\r\nconst holes = document.querySelectorAll('.hole'); // 全部的洞\r\nconst moles = document.querySelectorAll('.mole'); // 全部的地鼠\r\nlet lastMole; // 避免地鼠重複\r\nlet timeUp = false; // 控制遊戲時間，為 true 就關閉遊戲\r\nlet score = 0; // 計分\r\n\r\n// 建立地鼠出現的時間 (秒) 的 function\r\nfunction randomTime(min, max) {\r\n  // 取得最大和最小值得區間\r\n  return Math.round(Math.random() * (max - min) + min);\r\n}\r\n\r\n// 讓地鼠隨機從某個洞出現的 function (會回傳隨機的 DOM 元素)\r\n// 參數是取得全部的洞\r\nfunction randomHole(holes) {\r\n  // 取得最大整數 floor (四捨五入 (round) 會超出 index)\r\n  const idx = Math.floor(Math.random() * holes.length); // 回傳 0 ~ length 之間的隨機數 (不含 length)\r\n  const hole = holes[idx];\r\n\r\n  if (hole === lastMole) {\r\n    return randomHole(holes); // 再次呼叫 randomHole 重新取得新的地鼠出現的洞 (DOM)\r\n  }\r\n\r\n  lastMole = hole; // 取得 function 呼叫後的地鼠出現的洞 (DOM)\r\n\r\n  return hole; // 回傳地鼠出現的洞 (DOM)\r\n}\r\n\r\n// 取得地鼠出現的 function\r\nfunction peep() {\r\n  const time = randomTime(200, 1000); // 地鼠出現的時間\r\n  const hole = randomHole(holes); // 地鼠出現的洞\r\n  hole.classList.add('up'); // 讓地鼠出現\r\n\r\n  setTimeout(() => {\r\n    hole.classList.remove('up'); // 讓地鼠自動回到洞裡\r\n\r\n    if (!timeUp) { // 遊戲沒結束就繼續讓地鼠出現\r\n      peep(); // 重新開始遊戲\r\n    }\r\n  }, time)\r\n}\r\n\r\n// 啟動遊戲\r\nfunction startGame() {\r\n  scoreBoard.textContent = 0; // 重設記分板\r\n  timeUp = false; // 玩多次能重新開始遊戲\r\n  score = 0; // 重新計分\r\n  peep();\r\n\r\n  // 透過 setTimeout 來為遊戲計時 (10 秒)\r\n  setTimeout(() => timeUp = true, 10000);\r\n}\r\n\r\n// 打地鼠計分\r\nfunction bonk(e) {\r\n  // e.isTrusted 是確保事件是由使用者操作，不是透過其他方式修改事件 (透過其他方式作弊)\r\n  if(!e.isTrusted) {\r\n    return;\r\n  }\r\n  score++;\r\n  this.parentNode.classList.remove('up'); // 點擊後讓地鼠回到洞裡 (移除 parent 的 class)\r\n  scoreBoard.textContent = score;\r\n}\r\n\r\n// 取得每隻地鼠的 DOM，click 後能計分\r\nmoles.forEach(mole => mole.addEventListener('click', bonk));"]}